@startuml

title WP4 - Infrastructure As Code Layer \n Architecture Overview

skinparam fixCircleLabelOverlapping true 

'reference to WP3
component "SODALITE IDE" as cSIDE #PaleGreen
component "Ansible Support" as cAnsible
cSIDE*-l-cAnsible


'security APIs
interface "SemanticReasonerAPI"  as repoEndpoint #PaleGreen

interface "SecretVaultAPI" as VaultAPI #LightSlateGrey
interface "IAMIntrospectionAPI" as iIAM #LightSlateGrey

'WP4 components and packages
package "Deployment\nPreparation" as pDP {
    component [Abstract Model\nParser] as cAbstractModelParser
    component [IaC Blueprint\nbuilder] as cIaCBlueprintBuilder
    interface "Deployment\nPreparationAPI"  as iBluePrintGeneratorAPI
    cAbstractModelParser -u- iBluePrintGeneratorAPI
    cIaCBlueprintBuilder -u- iBluePrintGeneratorAPI    
}

package "Image Builder" {
    component [Runtime\nImage\nBuilder] as cRuntimeImageBuilder
    component [Concrete\nImage\nBuilder] as cConcreteImageBuilder
    interface "Runtime\nImageAPI"  as iRuntimeImageBuilder
    cRuntimeImageBuilder -l- iRuntimeImageBuilder
    cRuntimeImageBuilder -u-> cConcreteImageBuilder:use
    database "Image\nregistry" as dIR
    interface "   Image\ndata access" as iIRDataAccess
    dIR -r- iIRDataAccess
    cRuntimeImageBuilder -d-( iIRDataAccess
}

package "IaC Verification" as pIV {
    component [IaC Verifier] as cIaCVerifier
    interface "IaCVerificationAPI"  as iIaCVerifier
    cIaCVerifier -r- iIaCVerifier
    component [Verification\nModel Builder] as cVerificationModelBuilder
    component [Topology\nVerifier] as cTopologyVerifier
    component [Provisioning\nWorkflow Verifier] as cProvisioningWorkflowVerifier
    cIaCVerifier -u-> cVerificationModelBuilder:use
    cIaCVerifier -u-> cTopologyVerifier:use
    cIaCVerifier -d-> cProvisioningWorkflowVerifier:use
}

package "Defect Prediction and Correction" as pDPC {
    component [Bug Predictor\nand Fixer ] as cBugPredictorAndFixer
    interface "DefectPrediction\nCorrectionAPI"  as iBugPredictorAndFixer
    cBugPredictorAndFixer -u- iBugPredictorAndFixer
    component [Predictive\nModel Builder] as cPredictiveModelBuilder
    component [IaC Quality\nAssessor] as cIaCQualityAssessor
    cBugPredictorAndFixer --> cIaCQualityAssessor:use
    cBugPredictorAndFixer --> cPredictiveModelBuilder:use
}

package "Performance\nOptimisation" as packagePO {
    component "Application\nOptimiser" as cApplicationOptimiser
    interface "Application\nOptimiserAPI"  as iApplicationOptimiser
    cApplicationOptimiser -r- iApplicationOptimiser
}


package "Platform\nDiscovery" as packagePD {
    component "Platform\nDiscovery" as cPlatformDiscovery
    interface "Platform\nDiscoveryAPI"  as iPlatformDiscovery
    cPlatformDiscovery -u- iPlatformDiscovery
}

cAbstractModelParser -r-( repoEndpoint
cSIDE -d-( iBluePrintGeneratorAPI
cSIDE -d-( iIaCVerifier
cSIDE -d-( iBugPredictorAndFixer
cSIDE -d-( iPlatformDiscovery
cSIDE -d-( iIAM:use
'cSIDE -( VaultAPI:use

cIaCBlueprintBuilder -d-( iApplicationOptimiser
cSIDE -( iRuntimeImageBuilder

cPredictiveModelBuilder -d-( repoEndpoint
cVerificationModelBuilder -( repoEndpoint
cApplicationOptimiser -d-( repoEndpoint
cPlatformDiscovery -d-( repoEndpoint

cPlatformDiscovery -u-( iIAM
cPlatformDiscovery -u-( VaultAPI
cAbstractModelParser -u-( iIAM
cAbstractModelParser -u-( VaultAPI
@enduml