@startuml

title Execute Provisioning, Deployment and Configuration (WP5)

actor "Application\nOps Expert" as ops
participant "SOLIDATE\nIDE" as ide
participant "IaC Blueprint Builder" as builder
participant "Dashboard registry" as registry
participant  Orchestrator as orch
participant "Dashboard agent" as dash
participant "Execution Platform\nManager" as res
participant "VM" as VM
participant "Monitoring" as mon
participant "ImageRegistry" as imagereg
participant "Refactoring" as refact

ref over ide: Login

ops->ide: Deploy
activate ide
ide->builder: Save AADM (AADM JSON)
activate builder
builder->builder: Create CSAR
builder->orch: Create blueprint (CSAR)
activate orch
orch->orch: Save blueprint
orch-->builder: Blueprint created (Blueprint ID)
deactivate orch
builder-->ide: Blueprint created (Blueprint ID)
deactivate builder

ide -> ide: Generate Monitoring ID

ide->orch: Deploy blueprint (Blueprint ID + inputs)
activate orch
orch-->ide: Deployment started (Session ID)
orch->orch: Deploy

loop Execution Platform (EP) in Execution Platforms

  activate res
  alt EP is IaaS Clouds (OpenStack, AWS)
    orch->res: Provision (IaaS resources)
    res-->orch: Set of VMs
    orch->VM: Install Lightweight Runtime Environment (LRE)
  end
  deactivate res

  loop Application components per EP

    orch->imagereg: Pull container image (image name)
    imagereg-->orch: Container image

    alt EP is IaaS Clouds (OpenStack, AWS)
      orch->VM: Configure (application component + values)
      orch->VM: Deploy (container image)
    else EP is Kubernetes
      orch->res: Submit(deployment)
      activate res
        note right
          Kubernetes automates:
          - provision of pods
          - artifact deployment
          - configuration of components
        end note
        res-->orch: deployment created
      deactivate res

    else EP is Resource management system (PBS Toque, Slurm)
      orch->res: Copy artifacts and job script to user workspace
      orch->res: Submit job script
    end

    opt Monitoring enabled
      loop EP in Execution Platforms
      orch->mon: Configure monitoring (EP platform)
      end
      loop Application component per EP
      orch->mon: Configure monitoring (Application component)
      end
    end

  end
end

ide -> registry: Create dashboards (Monitoring ID)
activate registry
ref over registry: Check JWT access token
registry -> registry: Save user email

alt user is not registered in dashboard
	    registry -> dash: Register user (email)
	    activate dash
	    dash --> registry: User registered
	    deactivate dash
end

loop Dashboard in Dashboard types
	registry -> registry: Generate dashboard (Monitoring ID)
	registry -> dash: Create Dashboard
	activate dash
	dash --> registry: Dashboard URL
	deactivate dash
	registry -> dash: Set Dashboard user permissions (email)
	activate dash
	dash --> registry: User permissions set
	deactivate dash
	registry -> registry: Store Dashboard URL (email, Monitoring ID)

end
registry --> ide: Dashboards created
deactivate registry

ide->refact: register deployment
activate refact
deactivate refact

orch-->ide: Deployment complete
deactivate orch
ide-->ops: Deployment complete
deactivate ide


@enduml